version: "3.9"
services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: "default-db"
      POSTGRES_USER: "someuser"
      POSTGRES_PASSWORD: "p@ssw0rD"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U someuser -d default-db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  migrations:
    build:
      context: ./backend
      dockerfile: ./migrate.Dockerfile
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=someuser
      - POSTGRES_PASSWORD=p@ssw0rD
      - POSTGRES_DB=default-db
    depends_on:
      db:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "5050:5050"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=someuser
      - POSTGRES_PASSWORD=p@ssw0rD
      - POSTGRES_DB=default-db
      - LOG_LEVEL=debug
      - ADDR=5050
      - JWT_EXPIRATION=10000
      - JWT_KEY=kek
      - RABBITMQ_DSN=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_QUEUE=worker
      - FEEDWORKER_HOST=http://feed-worker:6050
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  feed-worker:
    build:
      context: ./feed-worker
      dockerfile: ./Dockerfile
    ports:
      - "6050:6050"
    environment:
      - RABBITMQ_DSN=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_QUEUE=worker
      - LOG_LEVEL=debug
      - ADDR=6050
      - BACKEND_HOST=http://backend:5050
      - REDIS_HOSTS=redis:6379
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  ws-feed:
    build:
      context: ./ws-feed
      dockerfile: ./Dockerfile
    ports:
      - "7050:7050"
    environment:
      - RABBITMQ_DSN=amqp://guest:guest@rabbitmq:5672/
      - LOG_LEVEL=debug
      - ADDR=7050
      - BACKEND_HOST=http://backend:5050
      - JWT_KEY=kek
    depends_on:
      rabbitmq:
        condition: service_healthy
      backend:
        condition: service_started
    restart: always
