// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// Auth is an autogenerated mock type for the Auth type
type Auth struct {
	mock.Mock
}

// AuthUser provides a mock function with given fields: ctx, userID, password
func (_m *Auth) AuthUser(ctx context.Context, userID uuid.UUID, password string) (string, error) {
	ret := _m.Called(ctx, userID, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, string) string); ok {
		r0 = rf(ctx, userID, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID, string) error); ok {
		r1 = rf(ctx, userID, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAuth interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuth creates a new instance of Auth. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuth(t mockConstructorTestingTNewAuth) *Auth {
	mock := &Auth{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
