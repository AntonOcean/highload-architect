// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Backend",
            "email": "a.m.tsitulskiy@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Упрощенный процесс аутентификации путем передачи идентификатор пользователя\nи получения токена для дальнейшего прохождения авторизации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "ИД/пароль пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/formatter.AuthUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "$ref": "#/definitions/formatter.TokenResp"
                        }
                    },
                    "400": {
                        "description": "Невалидные данные"
                    },
                    "404": {
                        "description": "Пользователь не найден"
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    },
                    "503": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "description": "Поиск анкет",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Поиск анкет",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Условие поиска по имени",
                        "name": "first_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Условие поиска по фамилии",
                        "name": "last_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный поиск пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/formatter.GetUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Невалидные данные"
                    },
                    "404": {
                        "description": "Анкета не найдена"
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    },
                    "503": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Регистрация нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Зарегистрировать пользователя",
                "parameters": [
                    {
                        "description": "Даннные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/formatter.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешная регистрация",
                        "schema": {
                            "$ref": "#/definitions/formatter.GetUser"
                        }
                    },
                    "400": {
                        "description": "Невалидные данные"
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    },
                    "503": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "description": "Получить анкету пользователя по ИД",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить анкету пользователя по ИД",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение анкеты пользователя",
                        "schema": {
                            "$ref": "#/definitions/formatter.GetUser"
                        }
                    },
                    "400": {
                        "description": "Невалидные данные"
                    },
                    "404": {
                        "description": "Анкета не найдена"
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    },
                    "503": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/formatter.Error"
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "integer",
                                "description": "Время, через которое еще раз нужно сделать запрос"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "formatter.AuthUser": {
            "type": "object",
            "required": [
                "id",
                "password"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "dd724b0b-8907-41b2-807b-7d359dd77f4c"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssW0rD"
                }
            }
        },
        "formatter.CreateUser": {
            "type": "object",
            "required": [
                "age",
                "biography",
                "city",
                "gender",
                "last_name",
                "name",
                "password"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 42
                },
                "biography": {
                    "type": "string",
                    "example": "-"
                },
                "city": {
                    "type": "string",
                    "example": "Moscow"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "last_name": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssW0rD"
                }
            }
        },
        "formatter.Error": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                }
            }
        },
        "formatter.GetUser": {
            "type": "object",
            "required": [
                "age",
                "biography",
                "city",
                "gender",
                "id",
                "last_name",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 42
                },
                "biography": {
                    "type": "string",
                    "example": "-"
                },
                "city": {
                    "type": "string",
                    "example": "Moscow"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "id": {
                    "type": "string",
                    "example": "dd724b0b-8907-41b2-807b-7d359dd77f4c"
                },
                "last_name": {
                    "type": "string",
                    "example": "Ivanov"
                },
                "name": {
                    "type": "string",
                    "example": "Ivan"
                }
            }
        },
        "formatter.TokenResp": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "jwt token"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5050",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "Backend swagger",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
